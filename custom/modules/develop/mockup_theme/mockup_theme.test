<?php
/**
 * @file
 * Provide test for mockup theme
 */

/**
 * Test case for mockup theme
 */
class MockupThemeTest extends DrupalWebTestCase {

  /**
   * Provide information about test
   *
   * @static
   * @return array
   *   Array information
   */
  public static function getInfo() {
    return array(
      'name' => t('Mockup Theme API.'),
      'group' => t('Mockup Theme'),
      'description' => t('Mockup Theme API.'),
    );
  }

  /**
   * Set up configuration
   *
   * @param array $modules
   *   Modules to enable
   */
  public function setUp($modules = array()) {
    global $theme;
    $modules[] = 'mockup_theme';
    $modules = array_unique($modules);
    if (version_compare(phpversion(), '5.3') < 0) {
      call_user_func_array(array($this, 'parent::setUp'), $modules);
    }
    else {
      call_user_func_array('parent::setUp', $modules);
    }
    $this->RebuildThemeRegistry($theme);
  }

  /**
   * Rebuild theme registry for theme
   *
   * @param string $theme
   *   Theme to enable
   */
  public function RebuildThemeRegistry($theme) {
    drupal_theme_rebuild();
  }

  /**
   * Test mockup theme api
   */
  public function testMockupThemeApi() {
    $theme = 'system_powered_by';

    mockup_theme_set_on();
    $html = mockup_theme($theme);
    $this->verbose($html);
    $this->assertTrue(empty($html));
    $this->assertTrue(mockup_theme_is_enabled());

    mockup_theme_set_off();
    $html = mockup_theme($theme);
    $this->verbose($html);
    $this->assertFalse(empty($html));
    $this->assertFalse(mockup_theme_is_enabled());
  }
}
